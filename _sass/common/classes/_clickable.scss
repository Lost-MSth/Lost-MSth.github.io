@function get-key-from-hover($key) {
  $slice-index: str-length($key) - 5;
  @if str-slice($key, $slice-index) == "-hover" {
    @return str-slice($key, 0, $slice-index - 1);
  }
  @return null;
}

@function get-key-from-active($key) {
  $slice-index: str-length($key) - 6;
  @if str-slice($key, $slice-index) == "-active" {
    @return str-slice($key, 0, $slice-index - 1);
  }
  @return null;
}

@function get-key-and-suffix($key) {
  $index: str-index($key, "--");
  @if $index {
    @return (
      key: str-slice($key, 1, $index - 1),
      suffix: str-slice($key, $index + 2)
    );
  }
  @return null;
}

@mixin clickable(
  $clr, $bg-clr,
  $hover-clr: default, $hover-bg-clr: default,
  $active-clr: default, $active-bg-clr: default,
  $focus-clr: default, $focus-bg-clr: default,
  $ignore-path: default
) {

  @if $ignore-path == default {
    $ignore-path: false;
  } @else {
    $ignore-path: true;
  }

  @include transition(map-get($clickable, transition));
  @if $ignore-path == false {
    svg {
      path {
        @include transition(map-get($clickable, transition));
      }
    }
  }

  // hover
  @if $hover-clr == default {
    @if $hover-bg-clr == null { // transparent background, text color need change.
      $hover-clr: $clr + "--hover";
    } @else {
      $hover-clr: $clr;
    }

  }
  @if $hover-bg-clr == default {
    $hover-bg-clr: $bg-clr + "--hover";
  }

  // active
  @if $active-clr == default {
    $suffix: get-key-and-suffix($hover-clr);
    @if $active-bg-clr == null and type-of($suffix) == "map" {
      $active-clr: map-get($suffix, key) + "--active";
    } @else {
      $active-clr: $hover-clr;
    }
  }

  @if $active-bg-clr == default {
    $suffix: get-key-and-suffix($hover-bg-clr);
    @if type-of($suffix) == "map" {
      $active-bg-clr: map-get($suffix, key) + "--active";
    }
  }

  // focus
  @if $focus-clr == default {
    $suffix: get-key-and-suffix($active-clr);
    @if $focus-bg-clr == null and type-of($suffix) == "map" {
      $focus-clr: map-get($suffix, key) + "--hover";
    } @else {
      $focus-clr: $active-clr;
    }
  }

  @if $focus-bg-clr == default {
    $suffix: get-key-and-suffix($active-bg-clr);
    @if type-of($suffix) == "map" {
      $focus-bg-clr: map-get($suffix, key) + "--hover";
    }
  }

  @include plain() {
    @include css-var(color, "var(--#{$clr})");
    @if $ignore-path == false {
      svg path {
        @include css-var(fill, "var(--#{$clr})");
      }
    }
    @if $bg-clr {
      @include css-var(background-color, "var(--#{$bg-clr})");
    }
  }
  @include hover() {
    @include css-var(color, "var(--#{$hover-clr})");
    @if $ignore-path == false {
      svg path {
        @include css-var(fill, "var(--#{$hover-clr})");
      }
    }
    @if $hover-bg-clr {
      @include css-var(background-color, "var(--#{$hover-bg-clr})");
    }
  }
  @include active() {
    @include css-var(color, "var(--#{$active-clr})");
    @if $ignore-path == false {
      svg path {
        @include css-var(fill, "var(--#{$active-clr})");
      }
    }
    @if $active-bg-clr {
      @include css-var(background-color, "var(--#{$active-bg-clr})");
    }
  }
  @include focus() {
    @include css-var(color, "var(--#{$focus-clr})");
    @if $ignore-path == false {
      svg path {
        @include css-var(fill, "var(--#{$focus-clr})");
      }
    }
    @if $focus-bg-clr{
      @include css-var(background-color, "var(--#{$focus-bg-clr})");
      // box-shadow: 0 0 0 2px rgba($pv_focus-bg-clr, .4);
    }
  }
  @include disabled() {
    @include css-var(color, "var(--#{$clr}) !important");
    opacity: .2 !important; /* stylelint-disable-line declaration-no-important */
    @if $ignore-path == false {
      svg path {
        @include css-var(fill, "var(--#{$clr}) !important");
      }
    }
    @if $bg-clr {
      @include css-var(background-color, "var(--#{$bg-clr}) !important");
    }
  }
}
